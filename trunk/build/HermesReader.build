<?xml version="1.0" encoding="utf-8"?>

<!--EXTERNAL_PROPERTIES: osql.exe;osql.connectionstring;initial.catalog;database.path;asp.net.account;config.connectionstring;target;path.to.runtime.log4net.config;product.tools.dir;dbgenerator.connectionstring;build.tools.dir-->
<project name="HermesReader" default="all">
	<property name="nant.settings.current.framework" value="net-3.5" />
	<property name="debug" value="true" />
	<property name="project.name" value="${project::get-name()}"/>	
	
	<!-- directories -->
	<property name="base.dir" value="${directory::get-parent-directory(project::get-base-directory())}" />
	<property name="third.party.dir" value="${base.dir}\thirdparty"/>
	<property name="build.dir" value="${base.dir}\build"/>
	<property name="build.tools.dir" value="${build.dir}\tools" />
	<property name="thirdparty.tools.dir" value="${third.party.dir}\tools" />
	<property name="sql.dir" value="${build.dir}\sql" />
	<property name="sql.dir.initial" value="${sql.dir}\initial" />
	<property name="initial.ddl.dir" value="${sql.dir.initial}\ddl" />
	<property name="initial.data.dir" value="${sql.dir.initial}\data" />
	<property name="thirdparty.lib.dir" value="${third.party.dir}\lib" />
	<property name="docs.dir" value="${base.dir}\docs" />
	<property name="config.dir" value="${build.dir}\config" />
	<property name="product.dir" value="${base.dir}\product"/>	
	<property name="product.app.dir" value="${product.dir}\app" />
	<property name="product.test.dir" value="${product.dir}\test" />		
	<property name="build.artifacts.dir" value="${build.dir}\buildartifacts" />
	<property name="web.ui.dir" value="${product.app.dir}\HermesReader.Web" />	
	<property name="coverage.dir" value="${build.artifacts.dir}\coverage"/>
	<property name="test.spike.dir" value="${product.test.dir}\xunit\HermesReader.Test\spikes"/>
	<property name="compile.dir" value="${build.artifacts.dir}" />

	<!-- end directories -->
	
	<!-- file names -->	
	<property name="log4net.lib" value="${thirdparty.lib.dir}\log4net\bin\log4net.dll" />
	<property name="app.config" value="${config.dir}\app.config" />	
	<property name="studio.app.config" value="${product.test.dir}\bin\debug\HermesReader.Test.dll.config" />	
	<property name="log4net.config" value="${config.dir}\log4net.config.xml" />
	<property name="global.asax" value="${config.dir}\global.asax" />	
	<property name="now" value="${datetime::now()}"/>
	<property name="store.lib" value="${project::get-name()}.dll"/>
	<property name="db.timestamp" value="${sql.dir}\db.timestamp"/>		
	<!-- end file names -->

	
	<!-- logging properties -->
	<property name="log.dir" value="${build.dir}\logs"/>
	<property name="log.file.name" value="${log.dir}\log.txt"/>
	<property name="log.level" value="DEBUG"/>
	<!-- logging properties -->

	<!-- db change tracking properties-->
		<property name="db.files.have.changed" value="false"/>		
	<!-- end db change tracking properties-->
	
	
	<fileset id="product.app.sources" >
		<include name="${product.app.dir}\**\*.cs"/>
		<exclude name="${product.app.dir}\**\AssemblyInfo.cs" />
		<exclude name="${web.ui.dir}\**\*.*" />		
	</fileset>

	<fileset id="db.creation.files">
		<include name="${initial.ddl.dir}\db.sql" asis="true" />
<!--		<include name="${initial.ddl.dir}\asp.login.sql" asis="true" />-->
		<include name="${initial.ddl.dir}\security.sql" asis="true" />
		<include name="${initial.ddl.dir}\tables.sql" asis="true" />	
		<include name="${initial.ddl.dir}\constraints.sql" asis="true" />	
		<include name="${initial.ddl.dir}\grants.sql" asis="true" />		
	</fileset>
	
	<fileset id="db.load.files">
		<include name="${initial.data.dir}\categories.sql" asis="true" />
		<include name="${initial.data.dir}\products.sql" asis="true" />		
		<include name="${initial.data.dir}\Foo.sql" asis="true" />					
	</fileset>
		   
    <!-- include the machine specific properties file to override machine specific defaults -->
    <if test="${file::exists('local.properties.xml')}">
		<echo message="Loading local.properties.xml" />
        <include buildfile="local.properties.xml" />
    </if>
  
	<include buildfile="HermesReader.deploy.build"/>
	<include buildfile="HermesReader.test.build"/>

	<target name="all" depends="build.db,test"/>
		
	<target name="clean">
		<delete dir="${build.artifacts.dir}" />
		<delete dir="${deploy.dir}" />
		<delete dir="${log.dir}" />
		<delete dir="${coverage.dir}" />
	</target>
	
	<target name="init" depends="clean">
		<mkdir dir="${build.artifacts.dir}" />
		<mkdir dir="${deploy.dir}" />
		<mkdir dir="${coverage.dir}"/>
		<mkdir dir="${log.dir}"/>		
	</target>
	
	<target name="expand.template.file">		
		<echo message="${initial.catalog}"/>
		<copy file="${target}.template" tofile="${target}" overwrite="true" >			
			<filterchain>
				<replacetokens>					
					<token key="initial.catalog" value="${initial.catalog}" />
					<token key="database.path" value="${database.path}" />
					<token key="asp.net.account" value="${asp.net.account}"/>
					<token key="log.file.name" value="${log.file.name}"/>
					<token key="log.level" value="${log.level}"/>
					<token key="path.to.runtime.log4net.config" value="${path.to.runtime.log4net.config}"/>
					<token key="config.connectionstring" value="${config.connectionstring}"/>				
					<token key="thirdparty.tools.dir" value="${thirdparty.tools.dir}"/>
					<token key="dbgenerator.connectionstring" value="${dbgenerator.connectionstring}"/>
					<token key="build.tools.dir" value="${build.tools.dir}"/>
				</replacetokens>
			</filterchain>
		</copy>			
	</target>

	
	<target name="run.sql.template" depends="expand.template.file,run.sql.file"/>
	
	<target name="run.sql.file">
		<exec program="${osql.exe}"		      
			  workingdir="${base.dir}"
			  commandline="${osql.connectionstring} -b -i ${target}" />
	</target>

	<target name="check.if.db.has.changed">
		<echo message="Checking if build.db is required"/>
		<property name="db.files.have.changed" value="false"/>
		<uptodate property="db.files.have.changed">
			<sourcefiles>
				<include name="${db.timestamp}" />
			</sourcefiles>
			<targetfiles>
				<include name="${initial.ddl.dir}\*.template" />
			</targetfiles>
		</uptodate>
	</target>

	<target name="build.db" depends="check.if.db.has.changed">
		<if test="${db.files.have.changed}">
			<echo message="Executing build.db"/>
			<call target="_build.db"/>
		</if>
		<touch file="${db.timestamp}"/>
	</target>

	<target name="_build.db">
		<foreach item="File" property="target">
			<in>
				<items refid="db.creation.files"/>
			</in>

			<do>
				<call target="run.sql.template"/>
			</do>
		</foreach>
	</target>
	
	
	<target name="load.data" depends="build.db">
		<foreach item="File" property="target">
			<in>
				<items refid="db.load.files"/>
			</in>

			<do>
				<call target="run.sql.template"/>
			</do>
		</foreach>
	</target>
	
	<target name="load.data.now" depends="_build.db,load.data"/>	
	
	<target name="compile" depends="init">
		<csc output="${compile.dir}\${store.lib}" target="library" debug="${debug}">
			<sources refid="product.app.sources" />			
			<references>
				<include name="${log4net.lib}"/>
			</references>
		</csc>
	</target>


 </project>
